import { type NextPage } from "next";
import Head from "next/head";

import { api } from "~/utils/api";
import { useRouter } from "next/router";
import { useState } from "react";

const PollPage: NextPage = () => {
  const router = useRouter();
  const pollId = router.query.pollId as string;
  const [selectedAnswer, setSelectedAnswer] = useState<string | undefined>();
  const { data, isLoading } = api.poll.getPoll.useQuery(
    { pollId },
    {
      enabled: !!pollId,
    }
  );

  const handlePollSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    if (!selectedAnswer) return;
  };

  return (
    <>
      <Head>
        <title>Answer a Poll</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c] text-white">
        {isLoading ? (
          <>Loading...</>
        ) : (
          <section className="flex flex-col gap-4">
            <h1 className="mb-4 text-4xl">{data?.question}</h1>
            <form className="flex flex-col gap-4" onSubmit={handlePollSubmit}>
              {data?.answers.map((answer) => (
                <fieldset key={answer.id} className="flex gap-2">
                  <input
                    id={`input-${answer.id}`}
                    type="radio"
                    checked={selectedAnswer === answer.id}
                    onChange={() => setSelectedAnswer(answer.id)}
                  />
                  <label htmlFor={`input-${answer.id}`}>{answer.text}</label>
                </fieldset>
              ))}

              <button className="bg-blue-400 px-3 py-2 hover:bg-blue-500">
                Submit
              </button>
            </form>
          </section>
        )}
      </main>
    </>
  );
};

export default PollPage;
